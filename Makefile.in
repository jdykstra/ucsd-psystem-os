#
# This file is generated by the ucsdpsys_osmakgen(1) command, from the
# ucsd-psystem-xc project.  The ucsd-psystem-xc project is distributed under the
# terms and conditions of the GNU GPL version 3.  As a special exception, the
# contents of this file are not subject to those terms and conditions.
#
#
# Note well:  This file is generated.  See the 'filenames =' assignment, below,
# for more information.
#

#
# The $(prefix) macro is used by ./configure to define all the other
# installation paths.
#
# If you need to change the prefix, it is best to re-run ./configure using the
# --prefix=PATH option, as this will re-write all of the files which contain the
# prefix, not just this one.
#
prefix = @prefix@
exec_prefix = @exec_prefix@

#
# The $(datadir) is where to put the data directories.
#
# The $(datadir) is for architecture-neutral files.  On a network, this would be
# shared between all machines on the network.  It can be mounted read-only.
#
# This is where shell scripts are parked.  This is where report scripts are
# parked.  This is where documents are parked.
#
# By default, the macro uses the $(prefix) macro to simplify the number of
# things you have to supply on the ./configure command line.
#
datadir = $(DESTDIR)@datadir@
datarootdir = $(DESTDIR)@datarootdir@

#
# The $(maindir) is where to put the on-line manuals.  On a network, this would
# be shared between all machines on the network.  It can be mounted read-only.
#
# By default, the macro uses the $(prefix) macro to simplify the number of
# things you have to supply on the ./configure command line.
#
mandir = $(DESTDIR)@mandir@

#
# The $(sysconfdir) is where to put the system configuration directory.
#
#
# By default, the macro uses the $(prefix) macro to simplify the number of
# things you have to supply on the ./configure command line.  It is common to
# explicitly give ./configure --sysconfdir=/etc on the command line.
sysconfdir = $(DESTDIR)@sysconfdir@

#
# This makefile builds the UCSD p-System system in three stages.
#
# The first stage is to use the ucsdpsys_compile command (from the
# ucsd-psystem-xc project) to build the executables of the system, compiler,
# assembler, linker and utilities.
#
# The first stage files are then combined, using the ucsdpsys_mkfs and
# ucsdpsys_disk commands from the ucsd-psystem-fs project, to build disk images
# suitable for use with a UCSD p-System emulator.
#
# Stage two involves using the ucsdpsys_vm emulator, from the ucsd-psystem-vm
# project, to use the disk images created by stage one to compile the sources
# once again, this time using the compiler built by stage one, in order to have
# a natively compiled system.
#
# The second stage files are then combined, using the ucsdpsys_mkfs and
# ucsdpsys_disk commands, to build a second set of disk images.  In theory the
# system is now boot-strapped and ready to use.
#
# Stage three once again uses the emulator, but this time with the disk images
# created by stage two.  The codefiles produced by stage three should be
# identical to those produced by stage two.  If they differ, you have probably
# uncovered a bug.
#

all: stage1.disks

# Only stage one is working, so far.

#
# The host is the system (often a brand name) that will eventually host the
# boot-strapped system.  This controls the choice of certain system
# alternatives.  Look in the 'host' directory for the known host types (brand
# names).  It also implies the kind of microprocessor being used.
#
# The default is 'klebsch' in reference to the ucsd-psystem-vm project (the
# emulator was written by Mario Klebsch).
#
host = klebsch

#
# The arch is the microprocessor that the boot-strapped system will eventually
# execute on.  This controls the choice of interpreter, assembler and long
# integer support to be built.
#
# Look in the 'arch' directory for the known microprocessor types.  We have yet
# to locate all of the historical source code for all known architectures, so
# the coverage may be uneven.  If you have source code to one of the missing
# pieces, it would be a most welcome contribution to this project.
#
arch := $(shell sh etc/arch-from-host.sh $(host))

#
# The size of the disks typically used by this host, in 1024-byte (1kB) blocks.
# The included shell script is used to determine this automatically.  You should
# rarely need to override this manually.
#
host_disk_kb := $(shell sh etc/host-disk-kb.sh $(host))

#
# The Cross Compiler Flags
#
# The -fno-efj-nfj option tells the cross compiler not to use the EFJ and NFJ
# opcodes.  This is necessary for interpreters that do not implement these
# opcodes; Apple, for example.
#
# The -finline-math option tells the cross compiler to use the CSP math opcodes,
# rather than calling the TRANSCEN intrinsic unit.
#
XCFLAGS = --arch=$(arch) -Wno-shadow

#
# The Cross Assembler Flags
#
XAFLAGS = --arch=$(arch)

#
# Note well: This file is generated.
#
# This variable holds the list of files from which this file was generated.  By
# changeing it, and running the 'make rebuild-makefile' comand, you can
# manipulate it in various ways.
#
# 1. If you only need to rebuild the include dependencies, use the 'make
# rebuild-makefile' command.
# 2. If you need to add a source file, add it to the 'filenames' variable, and
# then rebuild the Makefile (see above).
# 3. If you want to add a new utility, the file must be named
# <utility>/main.text (plus as many include files as you like in that directory)
# for it to be recognised as a program to be compiled; then proceed as if you
# were adding a new file or files (see above).
# 4. If you need a more structural change to this file, you actually need to
# change the ucsdpsys_osmakgen command in the cross compiler ucsd-psystem-xc
# project.
#
# See the ucsdpsys_osmakgen(1) man page for more information about the directory
# structure.
#
filenames = aegis.conf aegis.conf.d/architecture aegis.conf.d/build \
		aegis.conf.d/develop_end_policy aegis.conf.d/diff \
		aegis.conf.d/file_template aegis.conf.d/history \
		aegis.conf.d/merge aegis.conf.d/web \
		aegis.file.template/asm_text aegis.file.template/c \
		aegis.file.template/cc aegis.file.template/cook \
		aegis.file.template/generic aegis.file.template/h \
		aegis.file.template/man aegis.file.template/sh \
		aegis.file.template/test.sh aegis.file.template/text \
		aegis.supplementary/test_prelude.inc.sh arch/00readme.txt \
		arch/pdp11/assembler/asm1.text arch/pdp11/assembler/asm2.text \
		arch/pdp11/assembler/asm3.text arch/pdp11/assembler/asm4.text \
		arch/pdp11/assembler/asm5.text arch/pdp11/assembler/asm6.text \
		arch/pdp11/assembler/main.text \
		arch/pdp11/assembler/module.cook \
		arch/pdp11/interpreter/00readme.txt \
		arch/pdp11/interpreter/dl.inc.text \
		arch/pdp11/interpreter/iotrap.inc.text \
		arch/pdp11/interpreter/lp.inc.text \
		arch/pdp11/interpreter/macros.inc.text \
		arch/pdp11/interpreter/main.asm.text \
		arch/pdp11/interpreter/mainop.inc.text \
		arch/pdp11/interpreter/procop.inc.text \
		arch/pdp11/interpreter/qx.inc.text \
		arch/pdp11/interpreter/rk.inc.text \
		arch/pdp11/interpreter/rx.inc.text \
		arch/pdp11/interpreter/tk.inc.text \
		arch/pdp11/qxboot/main.asm.text \
		arch/pdp11/rkboot/main.asm.text \
		arch/pdp11/rxboot/main.asm.text arch/z80/assembler/asm1.text \
		arch/z80/assembler/asm2.text arch/z80/assembler/asm3.text \
		arch/z80/assembler/asm4.text arch/z80/assembler/asm5.text \
		arch/z80/assembler/asm6.text \
		arch/z80/assembler/error-messages.text \
		arch/z80/assembler/extra.z80.text arch/z80/assembler/main.text \
		arch/z80/assembler/opcode-data.text \
		arch/z80/interpreter/arith.inc.text \
		arch/z80/interpreter/boot.inc.text \
		arch/z80/interpreter/cpmio.inc.text \
		arch/z80/interpreter/fpi.inc.text \
		arch/z80/interpreter/fpl.inc.text \
		arch/z80/interpreter/fpt.inc.text \
		arch/z80/interpreter/interp.inc.text \
		arch/z80/interpreter/main.asm.text \
		arch/z80/interpreter/nofpi.inc.text \
		arch/z80/interpreter/nofpt.inc.text \
		arch/z80/interpreter/proc1.inc.text \
		arch/z80/interpreter/proc2.inc.text \
		arch/z80/interpreter/set1.inc.text \
		arch/z80/interpreter/set2.inc.text \
		arch/z80/interpreter/stp.inc.text \
		arch/z80/interpreter/vars.inc.text basic/main.text \
		basicio/main.txt binder/main.text bios.diag/b.diag.dsk.text \
		bios.diag/b.diag.int.text bios.diag/b.diag.rsp.text \
		bios.diag/b.diag.ser.text bios.diag/main.text calc/main.text \
		charset/bit-map-font.text charset/module.cook \
		compiler/block.text compiler/bodypart.a.text \
		compiler/bodypart.b.text compiler/bodypart.c.text \
		compiler/bodypart.d.text compiler/bodypart.e.text \
		compiler/compglbls.text compiler/compinit.text \
		compiler/decpart.a.text compiler/decpart.b.text \
		compiler/decpart.c.text compiler/error-messages.text \
		compiler/main.text compiler/module.cook compiler/procs.a.text \
		compiler/procs.b.text compiler/unitpart.text \
		copydupdir/main.text diagnostic/diag0.text \
		diagnostic/diag1.text diagnostic/diag2.text \
		diagnostic/diag3.text diagnostic/diag4.text \
		diagnostic/diag5.text diagnostic/diag6.text \
		diagnostic/main.text disassembler/disasm1.text \
		disassembler/disasm2.text disassembler/main.text \
		disassembler/module.cook disassembler/opcodes.ii.0.txt \
		editor/command.text editor/copyfile.text editor/environ.text \
		editor/find.text editor/head.text editor/init.text \
		editor/insertit.text editor/main.text editor/misc.text \
		editor/module.cook editor/moveit.text editor/out.text \
		editor/putsyntax.text editor/user.text editor/util.text \
		edittort11/main.text etc/BUILDING.man etc/Howto.conf.in \
		etc/Howto.cook etc/README.man etc/arch-from-host.sh \
		etc/autoconf.cook etc/change_log.man etc/check-tarball.sh \
		etc/configure.ac etc/documentation.cook etc/host-disk-kb.sh \
		etc/logo.so etc/metrics.cook etc/new.1.0.so etc/new.1.1.so \
		etc/new.1.2.so etc/new.1.3.so etc/new.sh etc/page-list.awk \
		etc/ppa-upload.sh etc/ref-ptx.ignore etc/ref-ptx.sh \
		etc/ref-ptx1.awk etc/ref-ptx2.awk etc/ref-toc.so \
		etc/reference.man etc/stage1.cook etc/tags.cook \
		etc/ucsdpsys-wrapper.sh execerr/main.text filer/filer.a.text \
		filer/filer.b.text filer/filer.c.text filer/filer.d.text \
		filer/filer.e.text filer/filer.vars.text filer/main.text \
		filer/module.cook host/00readme.txt \
		host/klebsch/long_integer/main.asm.text \
		host/klebsch/miscinfo.text \
		host/klebsch/transcendental/main.asm.text \
		host/klebsch/turtle_graphics/main.asm.text libmap/main.text \
		librarian/main.text librarian/module.cook linker/link0.text \
		linker/link1.text linker/link2.text linker/link3a.text \
		linker/link3b.text linker/main.text linker/module.cook \
		long_integer/decop.a.text long_integer/decop.b.text \
		long_integer/drwstuff.text long_integer/globals.text \
		long_integer/main.text man/man1/ucsdpsys_os_license_bsd.1 \
		man/man1/ucsdpsys_os_license_ucsd.1 markdupdir/main.text \
		pascalio/main.text pascalio/module.cook pascalio/unit.text \
		radix/main.text rt11toedit/main.text setup/main.text \
		system/globals.text system/main.text system/module.cook \
		system/syssegs.a.text system/syssegs.b.text \
		system/system.a.text system/system.b.text system/system.c.text \
		transcendental/main.text turtle_graphics/main.text \
		ucsdpsys_os_license_bsd.1 web/building.html web/download.html \
		web/howto.html web/icon.png.uue web/index.html web/module.cook \
		xref/main.text yaloe/main.text yaloe/module.cook

ifeq ($(host),pdp11)

stage1/$(host)/codefiles/arch/pdp11/assembler/main.code: \
		arch/pdp11/assembler/asm1.text arch/pdp11/assembler/asm2.text \
		arch/pdp11/assembler/asm3.text arch/pdp11/assembler/asm4.text \
		arch/pdp11/assembler/asm5.text arch/pdp11/assembler/asm6.text \
		arch/pdp11/assembler/main.text
	@mkdir -p stage1/$(host)/codefiles/arch/pdp11/assembler
	ucsdpsys_compile $(XCFLAGS) -fignore-undefined-segment-zero \
		-Iarch/pdp11/assembler -o \
		stage1/$(host)/codefiles/arch/pdp11/assembler/main.code \
		arch/pdp11/assembler/main.text
	ucsdpsys_librarian \
		--file=stage1/$(host)/codefiles/arch/pdp11/assembler/main.code \
		--remove-system-segments
endif

ifeq ($(host),pdp11)

stage1/$(host)/codefiles/interpreter/main.asm.code: \
		arch/pdp11/interpreter/dl.inc.text \
		arch/pdp11/interpreter/iotrap.inc.text \
		arch/pdp11/interpreter/lp.inc.text \
		arch/pdp11/interpreter/macros.inc.text \
		arch/pdp11/interpreter/main.asm.text \
		arch/pdp11/interpreter/mainop.inc.text \
		arch/pdp11/interpreter/procop.inc.text \
		arch/pdp11/interpreter/qx.inc.text \
		arch/pdp11/interpreter/rk.inc.text \
		arch/pdp11/interpreter/rx.inc.text \
		arch/pdp11/interpreter/tk.inc.text
	@mkdir -p stage1/$(host)/codefiles/interpreter
	ucsdpsys_assemble $(XAFLAGS) -Iarch/pdp11/interpreter -o \
		stage1/$(host)/codefiles/interpreter/main.asm.code \
		arch/pdp11/interpreter/main.asm.text
endif

ifeq ($(host),pdp11)

stage1/$(host)/codefiles/qxboot/main.asm.code: arch/pdp11/qxboot/main.asm.text
	@mkdir -p stage1/$(host)/codefiles/qxboot
	ucsdpsys_assemble $(XAFLAGS) -Iarch/pdp11/qxboot -o \
		stage1/$(host)/codefiles/qxboot/main.asm.code \
		arch/pdp11/qxboot/main.asm.text
endif

ifeq ($(host),pdp11)

stage1/$(host)/codefiles/rkboot/main.asm.code: arch/pdp11/rkboot/main.asm.text
	@mkdir -p stage1/$(host)/codefiles/rkboot
	ucsdpsys_assemble $(XAFLAGS) -Iarch/pdp11/rkboot -o \
		stage1/$(host)/codefiles/rkboot/main.asm.code \
		arch/pdp11/rkboot/main.asm.text
endif

ifeq ($(host),pdp11)

stage1/$(host)/codefiles/rxboot/main.asm.code: arch/pdp11/rxboot/main.asm.text
	@mkdir -p stage1/$(host)/codefiles/rxboot
	ucsdpsys_assemble $(XAFLAGS) -Iarch/pdp11/rxboot -o \
		stage1/$(host)/codefiles/rxboot/main.asm.code \
		arch/pdp11/rxboot/main.asm.text
endif

stage1/codefiles/arch/z80/assembler/z80.errors: \
		arch/z80/assembler/error-messages.text
	@mkdir -p stage1/codefiles/arch/z80/assembler
	ucsdpsys_errors --arch=z80 arch/z80/assembler/error-messages.text \
		stage1/codefiles/arch/z80/assembler/z80.errors

stage2/codefiles/arch/z80/assembler/z80.errors: \
		arch/z80/assembler/error-messages.text
	@mkdir -p stage2/codefiles/arch/z80/assembler
	ucsdpsys_errors --arch=z80 arch/z80/assembler/error-messages.text \
		stage2/codefiles/arch/z80/assembler/z80.errors

stage3/codefiles/arch/z80/assembler/z80.errors: \
		arch/z80/assembler/error-messages.text
	@mkdir -p stage3/codefiles/arch/z80/assembler
	ucsdpsys_errors --arch=z80 arch/z80/assembler/error-messages.text \
		stage3/codefiles/arch/z80/assembler/z80.errors

ifeq ($(host),z80)

stage1/$(host)/codefiles/arch/z80/assembler/main.code: \
		arch/z80/assembler/asm1.text arch/z80/assembler/asm2.text \
		arch/z80/assembler/asm3.text arch/z80/assembler/asm4.text \
		arch/z80/assembler/asm5.text arch/z80/assembler/asm6.text \
		arch/z80/assembler/extra.z80.text arch/z80/assembler/main.text
	@mkdir -p stage1/$(host)/codefiles/arch/z80/assembler
	ucsdpsys_compile $(XCFLAGS) -fignore-undefined-segment-zero \
		-Iarch/z80/assembler -o \
		stage1/$(host)/codefiles/arch/z80/assembler/main.code \
		arch/z80/assembler/main.text
	ucsdpsys_librarian \
		--file=stage1/$(host)/codefiles/arch/z80/assembler/main.code \
		--remove-system-segments
endif

stage1/$(host)/codefiles/assembler/z80.opcodes: \
		arch/z80/assembler/opcode-data.text
	@mkdir -p stage1/$(host)/codefiles/assembler
	ucsdpsys_opcodes --arch=z80 arch/z80/assembler/opcode-data.text \
		stage1/$(host)/codefiles/assembler/z80.opcodes

stage2/$(host)/codefiles/assembler/z80.opcodes: \
		arch/z80/assembler/opcode-data.text
	@mkdir -p stage2/$(host)/codefiles/assembler
	ucsdpsys_opcodes --arch=z80 arch/z80/assembler/opcode-data.text \
		stage2/$(host)/codefiles/assembler/z80.opcodes

stage3/$(host)/codefiles/assembler/z80.opcodes: \
		arch/z80/assembler/opcode-data.text
	@mkdir -p stage3/$(host)/codefiles/assembler
	ucsdpsys_opcodes --arch=z80 arch/z80/assembler/opcode-data.text \
		stage3/$(host)/codefiles/assembler/z80.opcodes

ifeq ($(host),z80)

stage1/$(host)/codefiles/interpreter/main.asm.code: \
		arch/z80/interpreter/arith.asm.text \
		arch/z80/interpreter/boot.asm.text \
		arch/z80/interpreter/cpmio.asm.text \
		arch/z80/interpreter/fpi.asm.text \
		arch/z80/interpreter/fpl.asm.text \
		arch/z80/interpreter/interp.asm.text \
		arch/z80/interpreter/main.asm.text \
		arch/z80/interpreter/nofpt.asm.text \
		arch/z80/interpreter/proc1.asm.text \
		arch/z80/interpreter/proc2.asm.text \
		arch/z80/interpreter/set1.asm.text \
		arch/z80/interpreter/set2.asm.text \
		arch/z80/interpreter/stp.asm.text \
		arch/z80/interpreter/vars.asm.text
	@mkdir -p stage1/$(host)/codefiles/interpreter
	ucsdpsys_assemble $(XAFLAGS) -Iarch/z80/interpreter -o \
		stage1/$(host)/codefiles/interpreter/main.asm.code \
		arch/z80/interpreter/main.asm.text
endif

stage1/$(host)/codefiles/basic/main.code: basic/main.text
	@mkdir -p stage1/$(host)/codefiles/basic
	ucsdpsys_compile $(XCFLAGS) -fignore-undefined-segment-zero -Ibasic -o \
		stage1/$(host)/codefiles/basic/main.code basic/main.text
	ucsdpsys_librarian --file=stage1/$(host)/codefiles/basic/main.code \
		--remove-system-segments

stage1/$(host)/codefiles/binder/main.code: binder/main.text
	@mkdir -p stage1/$(host)/codefiles/binder
	ucsdpsys_compile $(XCFLAGS) -Ibinder -o \
		stage1/$(host)/codefiles/binder/main.code binder/main.text

stage1/$(host)/codefiles/bios.diag/main.code: bios.diag/b.diag.dsk.text \
		bios.diag/b.diag.int.text bios.diag/b.diag.rsp.text \
		bios.diag/b.diag.ser.text bios.diag/main.text
	@mkdir -p stage1/$(host)/codefiles/bios.diag
	ucsdpsys_compile $(XCFLAGS) -Ibios.diag -o \
		stage1/$(host)/codefiles/bios.diag/main.code bios.diag/main.text

stage1/$(host)/codefiles/calc/main.code: calc/main.text
	@mkdir -p stage1/$(host)/codefiles/calc
	ucsdpsys_compile $(XCFLAGS) -Icalc -o \
		stage1/$(host)/codefiles/calc/main.code calc/main.text

stage1/$(host)/codefiles/compiler/main.code: compiler/block.text \
		compiler/bodypart.a.text compiler/bodypart.b.text \
		compiler/bodypart.c.text compiler/bodypart.d.text \
		compiler/bodypart.e.text compiler/compglbls.text \
		compiler/compinit.text compiler/decpart.a.text \
		compiler/decpart.b.text compiler/decpart.c.text \
		compiler/main.text compiler/procs.a.text compiler/procs.b.text \
		compiler/unitpart.text compiler/vstamp.inc.text
	@mkdir -p stage1/$(host)/codefiles/compiler
	ucsdpsys_compile $(XCFLAGS) -fignore-undefined-segment-zero -Icompiler \
		-o stage1/$(host)/codefiles/compiler/main.code \
		compiler/main.text
	ucsdpsys_librarian --file=stage1/$(host)/codefiles/compiler/main.code \
		--remove-system-segments

compiler/vstamp.inc.text: etc/vstamp.inc.text
	@mkdir -p compiler
	cp etc/vstamp.inc.text compiler/vstamp.inc.text

stage1/$(host)/codefiles/copydupdir/main.code: copydupdir/main.text
	@mkdir -p stage1/$(host)/codefiles/copydupdir
	ucsdpsys_compile $(XCFLAGS) -Icopydupdir -o \
		stage1/$(host)/codefiles/copydupdir/main.code \
		copydupdir/main.text

stage1/$(host)/codefiles/diagnostic/main.code: diagnostic/diag0.text \
		diagnostic/diag1.text diagnostic/diag2.text \
		diagnostic/diag3.text diagnostic/diag4.text \
		diagnostic/diag5.text diagnostic/diag6.text diagnostic/main.text
	@mkdir -p stage1/$(host)/codefiles/diagnostic
	ucsdpsys_compile $(XCFLAGS) -Idiagnostic -o \
		stage1/$(host)/codefiles/diagnostic/main.code \
		diagnostic/main.text

stage1/$(host)/codefiles/disassembler/main.code: disassembler/disasm1.text \
		disassembler/disasm2.text disassembler/main.text
	@mkdir -p stage1/$(host)/codefiles/disassembler
	ucsdpsys_compile $(XCFLAGS) -Idisassembler -o \
		stage1/$(host)/codefiles/disassembler/main.code \
		disassembler/main.text

stage1/$(host)/codefiles/editor/main.code: editor/command.text \
		editor/copyfile.text editor/environ.text editor/find.text \
		editor/head.text editor/init.text editor/insertit.text \
		editor/main.text editor/misc.text editor/moveit.text \
		editor/out.text editor/putsyntax.text editor/user.text \
		editor/util.text
	@mkdir -p stage1/$(host)/codefiles/editor
	ucsdpsys_compile $(XCFLAGS) -fignore-undefined-segment-zero -Ieditor \
		-o stage1/$(host)/codefiles/editor/main.code editor/main.text
	ucsdpsys_librarian --file=stage1/$(host)/codefiles/editor/main.code \
		--remove-system-segments

stage1/$(host)/codefiles/edittort11/main.code: edittort11/main.text
	@mkdir -p stage1/$(host)/codefiles/edittort11
	ucsdpsys_compile $(XCFLAGS) -Iedittort11 -o \
		stage1/$(host)/codefiles/edittort11/main.code \
		edittort11/main.text

stage1/$(host)/codefiles/execerr/main.code: execerr/main.text
	@mkdir -p stage1/$(host)/codefiles/execerr
	ucsdpsys_compile $(XCFLAGS) -Iexecerr -o \
		stage1/$(host)/codefiles/execerr/main.code execerr/main.text

stage1/$(host)/codefiles/filer/main.code: filer/filer.a.text \
		filer/filer.b.text filer/filer.c.text filer/filer.d.text \
		filer/filer.e.text filer/filer.vars.text filer/globals.text \
		filer/main.text
	@mkdir -p stage1/$(host)/codefiles/filer
	ucsdpsys_compile $(XCFLAGS) -fignore-undefined-segment-zero -Ifiler -o \
		stage1/$(host)/codefiles/filer/main.code filer/main.text
	ucsdpsys_librarian --file=stage1/$(host)/codefiles/filer/main.code \
		--remove-system-segments

filer/globals.text: system/globals.text
	@mkdir -p filer
	cp system/globals.text filer/globals.text

stage1/$(host)/codefiles/long_integer/main.asm.code: \
		host/klebsch/long_integer/main.asm.text
	@mkdir -p stage1/$(host)/codefiles/long_integer
	ucsdpsys_assemble $(XAFLAGS) -Ihost/klebsch/long_integer -o \
		stage1/$(host)/codefiles/long_integer/main.asm.code \
		host/klebsch/long_integer/main.asm.text

stage1/$(host)/codefiles/host/klebsch/miscinfo.data: host/klebsch/miscinfo.text
	@mkdir -p stage1/$(host)/codefiles/host/klebsch
	ucsdpsys_setup --arch=$(arch) --encode host/klebsch/miscinfo.text \
		stage1/$(host)/codefiles/host/klebsch/miscinfo.data

stage2/$(host)/codefiles/host/klebsch/miscinfo.data: host/klebsch/miscinfo.text
	@mkdir -p stage2/$(host)/codefiles/host/klebsch
	ucsdpsys_setup --arch=$(arch) --encode host/klebsch/miscinfo.text \
		stage2/$(host)/codefiles/host/klebsch/miscinfo.data

stage3/$(host)/codefiles/host/klebsch/miscinfo.data: host/klebsch/miscinfo.text
	@mkdir -p stage3/$(host)/codefiles/host/klebsch
	ucsdpsys_setup --arch=$(arch) --encode host/klebsch/miscinfo.text \
		stage3/$(host)/codefiles/host/klebsch/miscinfo.data

stage1/$(host)/codefiles/transcendental/main.asm.code: \
		host/klebsch/transcendental/main.asm.text
	@mkdir -p stage1/$(host)/codefiles/transcendental
	ucsdpsys_assemble $(XAFLAGS) -Ihost/klebsch/transcendental -o \
		stage1/$(host)/codefiles/transcendental/main.asm.code \
		host/klebsch/transcendental/main.asm.text

stage1/$(host)/codefiles/turtle_graphics/main.asm.code: \
		host/klebsch/turtle_graphics/main.asm.text
	@mkdir -p stage1/$(host)/codefiles/turtle_graphics
	ucsdpsys_assemble $(XAFLAGS) -Ihost/klebsch/turtle_graphics -o \
		stage1/$(host)/codefiles/turtle_graphics/main.asm.code \
		host/klebsch/turtle_graphics/main.asm.text

stage1/$(host)/codefiles/libmap/main.code: libmap/main.text
	@mkdir -p stage1/$(host)/codefiles/libmap
	ucsdpsys_compile $(XCFLAGS) -Ilibmap -o \
		stage1/$(host)/codefiles/libmap/main.code libmap/main.text

stage1/$(host)/codefiles/librarian/main.code: librarian/main.text
	@mkdir -p stage1/$(host)/codefiles/librarian
	ucsdpsys_compile $(XCFLAGS) -fignore-undefined-segment-zero \
		-Ilibrarian -o stage1/$(host)/codefiles/librarian/main.code \
		librarian/main.text
	ucsdpsys_librarian --file=stage1/$(host)/codefiles/librarian/main.code \
		--remove-system-segments

stage1/$(host)/codefiles/linker/main.code: linker/link0.text linker/link1.text \
		linker/link2.text linker/link3a.text linker/link3b.text \
		linker/main.text
	@mkdir -p stage1/$(host)/codefiles/linker
	ucsdpsys_compile $(XCFLAGS) -fignore-undefined-segment-zero -Ilinker \
		-o stage1/$(host)/codefiles/linker/main.code linker/main.text
	ucsdpsys_librarian --file=stage1/$(host)/codefiles/linker/main.code \
		--remove-system-segments

stage1/$(host)/codefiles/long_integer/main.pas.code: long_integer/globals.text \
		long_integer/main.text
	@mkdir -p stage1/$(host)/codefiles/long_integer
	ucsdpsys_compile $(XCFLAGS) -fignore-undefined-segment-zero \
		-Ilong_integer -o \
		stage1/$(host)/codefiles/long_integer/main.pas.code \
		long_integer/main.text
	ucsdpsys_librarian \
		--file=stage1/$(host)/codefiles/long_integer/main.pas.code \
		--remove-system-segments

stage1/$(host)/codefiles/long_integer/main.code: \
		stage1/$(host)/codefiles/long_integer/main.asm.code \
		stage1/$(host)/codefiles/long_integer/main.pas.code
	@mkdir -p stage1/$(host)/codefiles/long_integer
	ucsdpsys_link -o stage1/$(host)/codefiles/long_integer/main.code \
		stage1/$(host)/codefiles/long_integer/main.pas.code \
		stage1/$(host)/codefiles/long_integer/main.asm.code

$(mandir)/man1/ucsdpsys_os_license_bsd.1: man/man1/ucsdpsys_os_license_bsd.1
	@mkdir -p $(mandir)/man1
	cp man/man1/ucsdpsys_os_license_bsd.1 \
		$(mandir)/man1/ucsdpsys_os_license_bsd.1

$(mandir)/man1/ucsdpsys_os_license_ucsd.1: man/man1/ucsdpsys_os_license_ucsd.1
	@mkdir -p $(mandir)/man1
	cp man/man1/ucsdpsys_os_license_ucsd.1 \
		$(mandir)/man1/ucsdpsys_os_license_ucsd.1

stage1/$(host)/codefiles/markdupdir/main.code: markdupdir/main.text
	@mkdir -p stage1/$(host)/codefiles/markdupdir
	ucsdpsys_compile $(XCFLAGS) -Imarkdupdir -o \
		stage1/$(host)/codefiles/markdupdir/main.code \
		markdupdir/main.text

stage1/$(host)/codefiles/pascalio/main.code: pascalio/globals.text \
		pascalio/main.text pascalio/unit.text
	@mkdir -p stage1/$(host)/codefiles/pascalio
	ucsdpsys_compile $(XCFLAGS) -fignore-undefined-segment-zero -Ipascalio \
		-o stage1/$(host)/codefiles/pascalio/main.code \
		pascalio/main.text
	ucsdpsys_librarian --file=stage1/$(host)/codefiles/pascalio/main.code \
		--remove-system-segments

pascalio/globals.text: system/globals.text
	@mkdir -p pascalio
	cp system/globals.text pascalio/globals.text

stage1/$(host)/codefiles/radix/main.code: radix/main.text
	@mkdir -p stage1/$(host)/codefiles/radix
	ucsdpsys_compile $(XCFLAGS) -Iradix -o \
		stage1/$(host)/codefiles/radix/main.code radix/main.text

stage1/$(host)/codefiles/rt11toedit/main.code: rt11toedit/main.text
	@mkdir -p stage1/$(host)/codefiles/rt11toedit
	ucsdpsys_compile $(XCFLAGS) -Irt11toedit -o \
		stage1/$(host)/codefiles/rt11toedit/main.code \
		rt11toedit/main.text

stage1/$(host)/codefiles/setup/main.code: setup/main.text
	@mkdir -p stage1/$(host)/codefiles/setup
	ucsdpsys_compile $(XCFLAGS) -fignore-undefined-segment-zero -Isetup -o \
		stage1/$(host)/codefiles/setup/main.code setup/main.text
	ucsdpsys_librarian --file=stage1/$(host)/codefiles/setup/main.code \
		--remove-system-segments

stage1/$(host)/codefiles/system/main.code: system/globals.text \
		system/main.text system/syssegs.a.text system/syssegs.b.text \
		system/system.a.text system/system.b.text system/system.c.text \
		system/vstamp.inc.text
	@mkdir -p stage1/$(host)/codefiles/system
	ucsdpsys_compile $(XCFLAGS) -Isystem -o \
		stage1/$(host)/codefiles/system/main.code system/main.text

system/vstamp.inc.text: etc/vstamp.inc.text
	@mkdir -p system
	cp etc/vstamp.inc.text system/vstamp.inc.text

stage1/$(host)/codefiles/transcendental/main.pas.code: transcendental/main.text
	@mkdir -p stage1/$(host)/codefiles/transcendental
	ucsdpsys_compile $(XCFLAGS) -Itranscendental -o \
		stage1/$(host)/codefiles/transcendental/main.pas.code \
		transcendental/main.text

stage1/$(host)/codefiles/transcendental/main.code: \
		stage1/$(host)/codefiles/transcendental/main.asm.code \
		stage1/$(host)/codefiles/transcendental/main.pas.code
	@mkdir -p stage1/$(host)/codefiles/transcendental
	ucsdpsys_link -o stage1/$(host)/codefiles/transcendental/main.code \
		stage1/$(host)/codefiles/transcendental/main.pas.code \
		stage1/$(host)/codefiles/transcendental/main.asm.code

stage1/$(host)/codefiles/turtle_graphics/main.pas.code: \
		turtle_graphics/main.text
	@mkdir -p stage1/$(host)/codefiles/turtle_graphics
	ucsdpsys_compile $(XCFLAGS) -Iturtle_graphics -o \
		stage1/$(host)/codefiles/turtle_graphics/main.pas.code \
		turtle_graphics/main.text

stage1/$(host)/codefiles/turtle_graphics/main.code: \
		stage1/$(host)/codefiles/turtle_graphics/main.asm.code \
		stage1/$(host)/codefiles/turtle_graphics/main.pas.code
	@mkdir -p stage1/$(host)/codefiles/turtle_graphics
	ucsdpsys_link -o stage1/$(host)/codefiles/turtle_graphics/main.code \
		stage1/$(host)/codefiles/turtle_graphics/main.pas.code \
		stage1/$(host)/codefiles/turtle_graphics/main.asm.code

stage1/$(host)/codefiles/xref/main.code: xref/main.text
	@mkdir -p stage1/$(host)/codefiles/xref
	ucsdpsys_compile $(XCFLAGS) -Ixref -o \
		stage1/$(host)/codefiles/xref/main.code xref/main.text

stage1/$(host)/codefiles/yaloe/main.code: yaloe/globals.text yaloe/main.text
	@mkdir -p stage1/$(host)/codefiles/yaloe
	ucsdpsys_compile $(XCFLAGS) -fignore-undefined-segment-zero -Iyaloe -o \
		stage1/$(host)/codefiles/yaloe/main.code yaloe/main.text
	ucsdpsys_librarian --file=stage1/$(host)/codefiles/yaloe/main.code \
		--remove-system-segments

yaloe/globals.text: system/globals.text
	@mkdir -p yaloe
	cp system/globals.text yaloe/globals.text

stage1.disks: stage1/$(host)/diagnostic.vol stage1/$(host)/system.vol \
		stage1/$(host)/utility.vol

stage2.disks: stage2/$(host)/diagnostic.vol stage2/$(host)/system.vol \
		stage2/$(host)/utility.vol

stage3.disks: stage3/$(host)/diagnostic.vol stage3/$(host)/system.vol \
		stage3/$(host)/utility.vol

stage1/$(host)/diagnostic/system.$(host): \
		stage1/$(host)/codefiles/interpreter/main.asm.code
	@mkdir -p stage1/$(host)/diagnostic
	cp stage1/$(host)/codefiles/interpreter/main.asm.code \
		stage1/$(host)/diagnostic/system.$(host)

stage1/$(host)/system/system.$(host): \
		stage1/$(host)/codefiles/interpreter/main.asm.code
	@mkdir -p stage1/$(host)/system
	cp stage1/$(host)/codefiles/interpreter/main.asm.code \
		stage1/$(host)/system/system.$(host)

stage2/$(host)/diagnostic/system.$(host): \
		stage2/$(host)/codefiles/interpreter/main.asm.code
	@mkdir -p stage2/$(host)/diagnostic
	cp stage2/$(host)/codefiles/interpreter/main.asm.code \
		stage2/$(host)/diagnostic/system.$(host)

stage2/$(host)/system/system.$(host): \
		stage2/$(host)/codefiles/interpreter/main.asm.code
	@mkdir -p stage2/$(host)/system
	cp stage2/$(host)/codefiles/interpreter/main.asm.code \
		stage2/$(host)/system/system.$(host)

stage3/$(host)/diagnostic/system.$(host): \
		stage3/$(host)/codefiles/interpreter/main.asm.code
	@mkdir -p stage3/$(host)/diagnostic
	cp stage3/$(host)/codefiles/interpreter/main.asm.code \
		stage3/$(host)/diagnostic/system.$(host)

stage3/$(host)/system/system.$(host): \
		stage3/$(host)/codefiles/interpreter/main.asm.code
	@mkdir -p stage3/$(host)/system
	cp stage3/$(host)/codefiles/interpreter/main.asm.code \
		stage3/$(host)/system/system.$(host)

ifneq ($(wildcard host/$(host)/interpreter/main.asm.text),)
interpreter_stage1_diagnostic_code = stage1/$(host)/diagnostic/system.$(host)
interpreter_stage1_system_code = stage1/$(host)/system/system.$(host)
interpreter_stage2_diagnostic_code = stage2/$(host)/diagnostic/system.$(host)
interpreter_stage2_system_code = stage2/$(host)/system/system.$(host)
interpreter_stage3_diagnostic_code = stage3/$(host)/diagnostic/system.$(host)
interpreter_stage3_system_code = stage3/$(host)/system/system.$(host)
else
ifneq ($(wildcard arch/$(arch)/interpreter/main.asm.text),)
interpreter_stage1_diagnostic_code = stage1/$(host)/diagnostic/system.$(host)
interpreter_stage1_system_code = stage1/$(host)/system/system.$(host)
interpreter_stage2_diagnostic_code = stage2/$(host)/diagnostic/system.$(host)
interpreter_stage2_system_code = stage2/$(host)/system/system.$(host)
interpreter_stage3_diagnostic_code = stage3/$(host)/diagnostic/system.$(host)
interpreter_stage3_system_code = stage3/$(host)/system/system.$(host)
else
interpreter_stage1_diagnostic_code =
interpreter_stage1_system_code =
interpreter_stage2_diagnostic_code =
interpreter_stage2_system_code =
interpreter_stage3_diagnostic_code =
interpreter_stage3_system_code =
endif
endif

stage1/system/system.assmbler: stage1/codefiles/arch/$(arch)/assembler/main.code
	@mkdir -p stage1/system
	cp stage1/codefiles/arch/$(arch)/assembler/main.code \
		stage1/system/system.assmbler

stage2/system/system.assmbler: stage2/codefiles/arch/$(arch)/assembler/main.code
	@mkdir -p stage2/system
	cp stage2/codefiles/arch/$(arch)/assembler/main.code \
		stage2/system/system.assmbler

stage3/system/system.assmbler: stage3/codefiles/arch/$(arch)/assembler/main.code
	@mkdir -p stage3/system
	cp stage3/codefiles/arch/$(arch)/assembler/main.code \
		stage3/system/system.assmbler

ifneq ($(wildcard arch/$(arch)/assembler/main.text),)
stage1_assembler_code = stage1/$(host)/system/system.assmbler
stage2_assembler_code = stage2/$(host)/system/system.assmbler
stage3_assembler_code = stage3/$(host)/system/system.assmbler
else
stage1_assembler_code =
stage2_assembler_code =
stage3_assembler_code =
endif

stage1/$(host)/system/$(arch).errors: \
		stage1/$(host)/codefiles/assembler/$(arch).errors
	@mkdir -p stage1/$(host)/system
	cp stage1/$(host)/codefiles/assembler/$(arch).errors \
		stage1/$(host)/system/$(arch).errors

stage2/$(host)/system/$(arch).errors: \
		stage2/$(host)/codefiles/assembler/$(arch).errors
	@mkdir -p stage2/$(host)/system
	cp stage2/$(host)/codefiles/assembler/$(arch).errors \
		stage2/$(host)/system/$(arch).errors

stage3/$(host)/system/$(arch).errors: \
		stage3/$(host)/codefiles/assembler/$(arch).errors
	@mkdir -p stage3/$(host)/system
	cp stage3/$(host)/codefiles/assembler/$(arch).errors \
		stage3/$(host)/system/$(arch).errors

ifneq ($(wildcard arch/$(arch)/assembler/error-messages.text),)
stage1_assembler_error_data = stage1/system/$(arch).errors
stage2_assembler_error_data = stage2/system/$(arch).errors
stage3_assembler_error_data = stage3/system/$(arch).errors
else
stage1_assembler_error_data =
stage2_assembler_error_data =
stage3_assembler_error_data =
endif

stage1/system/$(arch).opcodes: \
		stage1/codefiles/arch/$(arch)/assembler/$(arch).opcodes
	@mkdir -p stage1/system
	cp stage1/codefiles/arch/$(arch)/assembler/$(arch).opcodes \
		stage1/system/$(arch).opcodes

stage2/system/$(arch).opcodes: \
		stage2/codefiles/arch/$(arch)/assembler/$(arch).opcodes
	@mkdir -p stage2/system
	cp stage2/codefiles/arch/$(arch)/assembler/$(arch).opcodes \
		stage2/system/$(arch).opcodes

stage3/system/$(arch).opcodes: \
		stage3/codefiles/arch/$(arch)/assembler/$(arch).opcodes
	@mkdir -p stage3/system
	cp stage3/codefiles/arch/$(arch)/assembler/$(arch).opcodes \
		stage3/system/$(arch).opcodes

ifneq ($(wildcard arch/$(arch)/assembler/opcode-data.text),)
stage1_assembler_opcode_data = stage1/system/$(arch).opcodes
stage2_assembler_opcode_data = stage2/system/$(arch).opcodes
stage3_assembler_opcode_data = stage3/system/$(arch).opcodes
else
stage1_assembler_opcode_data =
stage2_assembler_opcode_data =
stage3_assembler_opcode_data =
endif

stage1/$(host)/diagnostic/system.pascal: \
		stage1/$(host)/codefiles/diagnostic/main.code
	@mkdir -p stage1/$(host)/diagnostic
	cp stage1/$(host)/codefiles/diagnostic/main.code \
		stage1/$(host)/diagnostic/system.pascal

#
# The Diagnostic Disk image is used to test the p-machine (interpreter, virtual
# machine) implementation.  It works by booting straight into the test program,
# and running the test program instead of the normal system.
#
# This provides a way of separating the diagnosis of p-machine problems from the
# diagnosis of system problems, when boot-strapping a new host.
#

stage1/$(host)/diagnostic.vol: stage1/$(host)/diagnostic/system.pascal \
		$(interpreter_stage1_diagnostic_code)
	@mkdir -p stage1/$(host)
	ucsdpsys_mkfs --arch=$(arch) -B$(host_disk_kb) --label=diagnostic \
		stage1/$(host)/diagnostic.vol
	ucsdpsys_disk -f stage1/$(host)/diagnostic.vol --put \
		stage1/$(host)/diagnostic/system.pascal \
		$(interpreter_stage1_diagnostic_code)
	ucsdpsys_disk -f stage1/$(host)/diagnostic.vol --crunch --list \
		--sort=name

# build system library

stage1/$(host)/system/system.library: \
		stage1/$(host)/codefiles/long_integer/main.code \
		stage1/$(host)/codefiles/pascalio/main.code \
		stage1/$(host)/codefiles/transcendental/main.code \
		stage1/$(host)/codefiles/turtle_graphics/main.code
	@mkdir -p stage1/$(host)/system
	ucsdpsys_librarian --create=stage1/$(host)/system/system.library \
		--copy stage1/$(host)/codefiles/long_integer/main.code \
		--segment longinte=30 --copy \
		stage1/$(host)/codefiles/pascalio/main.code --segment \
		pascalio=31 --copy \
		stage1/$(host)/codefiles/transcendental/main.code --segment \
		transcen=29 --copy \
		stage1/$(host)/codefiles/turtle_graphics/main.code --segment \
		turtlegr=20

stage1/$(host)/system/system.miscinfo: \
		stage1/$(host)/codefiles/host/$(host)/miscinfo.data
	@mkdir -p stage1/$(host)/system
	cp stage1/$(host)/codefiles/host/$(host)/miscinfo.data \
		stage1/$(host)/system/system.miscinfo

stage2/$(host)/system/system.miscinfo: \
		stage2/$(host)/codefiles/host/$(host)/miscinfo.data
	@mkdir -p stage2/$(host)/system
	cp stage2/$(host)/codefiles/host/$(host)/miscinfo.data \
		stage2/$(host)/system/system.miscinfo

stage3/$(host)/system/system.miscinfo: \
		stage3/$(host)/codefiles/host/$(host)/miscinfo.data
	@mkdir -p stage3/$(host)/system
	cp stage3/$(host)/codefiles/host/$(host)/miscinfo.data \
		stage3/$(host)/system/system.miscinfo

ifneq ($(wildcard host/$(host)/miscinfo.text),)
stage1_system_miscinfo = stage1/$(host)/system/system.miscinfo
stage2_system_miscinfo = stage2/$(host)/system/system.miscinfo
stage3_system_miscinfo = stage3/$(host)/system/system.miscinfo
else
stage1_system_miscinfo =
stage2_system_miscinfo =
stage3_system_miscinfo =
endif

stage1/$(host)/system/system.compiler: \
		stage1/$(host)/codefiles/compiler/main.code
	@mkdir -p stage1/$(host)/system
	cp stage1/$(host)/codefiles/compiler/main.code \
		stage1/$(host)/system/system.compiler

stage1/$(host)/system/system.editor: stage1/$(host)/codefiles/editor/main.code
	@mkdir -p stage1/$(host)/system
	cp stage1/$(host)/codefiles/editor/main.code \
		stage1/$(host)/system/system.editor

stage1/$(host)/system/system.filer: stage1/$(host)/codefiles/filer/main.code
	@mkdir -p stage1/$(host)/system
	cp stage1/$(host)/codefiles/filer/main.code \
		stage1/$(host)/system/system.filer

stage1/$(host)/system/system.linker: stage1/$(host)/codefiles/linker/main.code
	@mkdir -p stage1/$(host)/system
	cp stage1/$(host)/codefiles/linker/main.code \
		stage1/$(host)/system/system.linker

stage1/$(host)/system/system.pascal: stage1/$(host)/codefiles/system/main.code
	@mkdir -p stage1/$(host)/system
	cp stage1/$(host)/codefiles/system/main.code \
		stage1/$(host)/system/system.pascal

stage1/$(host)/system/system.syntax: compiler/error-messages.text
	@mkdir -p stage1/$(host)/system
	cp compiler/error-messages.text stage1/$(host)/system/system.syntax

#
# The Stage One System Disk image contains the files needed to boot the UCSD
# p-System, and the files that provide the fundamental operations of the system.
# It also includes the programs necessary to build other programs and libraries.
#
# The Stage One System Disk image is also used when compiling the next stage of
# the build.
#

stage1/$(host)/system.vol: $(interpreter_stage1_system_code) \
		$(stage1_assembler_code) $(stage1_assembler_error_data) \
		$(stage1_assembler_opcode_data) $(stage1_system_miscinfo) \
		stage1/$(host)/system/system.compiler \
		stage1/$(host)/system/system.editor \
		stage1/$(host)/system/system.filer \
		stage1/$(host)/system/system.library \
		stage1/$(host)/system/system.linker \
		stage1/$(host)/system/system.pascal \
		stage1/$(host)/system/system.syntax
	@mkdir -p stage1/$(host)
	ucsdpsys_mkfs --arch=$(arch) -B$(host_disk_kb) --label=system \
		stage1/$(host)/system.vol
	ucsdpsys_disk --file stage1/$(host)/system.vol --text --put \
		$(interpreter_stage1_system_code) $(stage1_assembler_code) \
		$(stage1_assembler_error_data) $(stage1_assembler_opcode_data) \
		$(stage1_system_miscinfo) \
		stage1/$(host)/system/system.compiler \
		stage1/$(host)/system/system.editor \
		stage1/$(host)/system/system.filer \
		stage1/$(host)/system/system.library \
		stage1/$(host)/system/system.linker \
		stage1/$(host)/system/system.pascal \
		stage1/$(host)/system/system.syntax
	ucsdpsys_disk --file stage1/$(host)/system.vol --crunch --list \
		--sort=name

stage2/$(host)/system/system.compiler: \
		stage2/$(host)/codefiles/compiler/main.code
	@mkdir -p stage2/$(host)/system
	cp stage2/$(host)/codefiles/compiler/main.code \
		stage2/$(host)/system/system.compiler

stage2/$(host)/system/system.editor: stage2/$(host)/codefiles/editor/main.code
	@mkdir -p stage2/$(host)/system
	cp stage2/$(host)/codefiles/editor/main.code \
		stage2/$(host)/system/system.editor

stage2/$(host)/system/system.filer: stage2/$(host)/codefiles/filer/main.code
	@mkdir -p stage2/$(host)/system
	cp stage2/$(host)/codefiles/filer/main.code \
		stage2/$(host)/system/system.filer

stage2/$(host)/system/system.linker: stage2/$(host)/codefiles/linker/main.code
	@mkdir -p stage2/$(host)/system
	cp stage2/$(host)/codefiles/linker/main.code \
		stage2/$(host)/system/system.linker

stage2/$(host)/system/system.pascal: stage2/$(host)/codefiles/system/main.code
	@mkdir -p stage2/$(host)/system
	cp stage2/$(host)/codefiles/system/main.code \
		stage2/$(host)/system/system.pascal

stage2/$(host)/system/system.syntax: compiler/error-messages.text
	@mkdir -p stage2/$(host)/system
	cp compiler/error-messages.text stage2/$(host)/system/system.syntax

#
# The Stage Two System Disk image contains the files needed to boot the UCSD
# p-System, and the files that provide the fundamental operations of the system.
# It also includes the programs necessary to build other programs and libraries.
#
# The Stage Two System Disk image is also used when compiling the next stage of
# the build.
#

stage2/$(host)/system.vol: $(interpreter_stage2_system_code) \
		$(stage2_assembler_code) $(stage2_assembler_error_data) \
		$(stage2_assembler_opcode_data) $(stage2_system_miscinfo) \
		stage2/$(host)/system/system.compiler \
		stage2/$(host)/system/system.editor \
		stage2/$(host)/system/system.filer \
		stage2/$(host)/system/system.library \
		stage2/$(host)/system/system.linker \
		stage2/$(host)/system/system.pascal \
		stage2/$(host)/system/system.syntax
	@mkdir -p stage2/$(host)
	ucsdpsys_mkfs --arch=$(arch) -B$(host_disk_kb) --label=system \
		stage2/$(host)/system.vol
	ucsdpsys_disk --file stage2/$(host)/system.vol --text --put \
		$(interpreter_stage2_system_code) $(stage2_assembler_code) \
		$(stage2_assembler_error_data) $(stage2_assembler_opcode_data) \
		$(stage2_system_miscinfo) \
		stage2/$(host)/system/system.compiler \
		stage2/$(host)/system/system.editor \
		stage2/$(host)/system/system.filer \
		stage2/$(host)/system/system.library \
		stage2/$(host)/system/system.linker \
		stage2/$(host)/system/system.pascal \
		stage2/$(host)/system/system.syntax
	ucsdpsys_disk --file stage2/$(host)/system.vol --crunch --list \
		--sort=name

stage3/$(host)/system/system.compiler: \
		stage3/$(host)/codefiles/compiler/main.code
	@mkdir -p stage3/$(host)/system
	cp stage3/$(host)/codefiles/compiler/main.code \
		stage3/$(host)/system/system.compiler

stage3/$(host)/system/system.editor: stage3/$(host)/codefiles/editor/main.code
	@mkdir -p stage3/$(host)/system
	cp stage3/$(host)/codefiles/editor/main.code \
		stage3/$(host)/system/system.editor

stage3/$(host)/system/system.filer: stage3/$(host)/codefiles/filer/main.code
	@mkdir -p stage3/$(host)/system
	cp stage3/$(host)/codefiles/filer/main.code \
		stage3/$(host)/system/system.filer

stage3/$(host)/system/system.linker: stage3/$(host)/codefiles/linker/main.code
	@mkdir -p stage3/$(host)/system
	cp stage3/$(host)/codefiles/linker/main.code \
		stage3/$(host)/system/system.linker

stage3/$(host)/system/system.pascal: stage3/$(host)/codefiles/system/main.code
	@mkdir -p stage3/$(host)/system
	cp stage3/$(host)/codefiles/system/main.code \
		stage3/$(host)/system/system.pascal

stage3/$(host)/system/system.syntax: compiler/error-messages.text
	@mkdir -p stage3/$(host)/system
	cp compiler/error-messages.text stage3/$(host)/system/system.syntax

#
# The Stage Three System Disk image contains the files needed to boot the UCSD
# p-System, and the files that provide the fundamental operations of the system.
# It also includes the programs necessary to build other programs and libraries.
#

stage3/$(host)/system.vol: $(interpreter_stage3_system_code) \
		$(stage3_assembler_code) $(stage3_assembler_error_data) \
		$(stage3_assembler_opcode_data) $(stage3_system_miscinfo) \
		stage3/$(host)/system/system.compiler \
		stage3/$(host)/system/system.editor \
		stage3/$(host)/system/system.filer \
		stage3/$(host)/system/system.library \
		stage3/$(host)/system/system.linker \
		stage3/$(host)/system/system.pascal \
		stage3/$(host)/system/system.syntax
	@mkdir -p stage3/$(host)
	ucsdpsys_mkfs --arch=$(arch) -B$(host_disk_kb) --label=system \
		stage3/$(host)/system.vol
	ucsdpsys_disk --file stage3/$(host)/system.vol --text --put \
		$(interpreter_stage3_system_code) $(stage3_assembler_code) \
		$(stage3_assembler_error_data) $(stage3_assembler_opcode_data) \
		$(stage3_system_miscinfo) \
		stage3/$(host)/system/system.compiler \
		stage3/$(host)/system/system.editor \
		stage3/$(host)/system/system.filer \
		stage3/$(host)/system/system.library \
		stage3/$(host)/system/system.linker \
		stage3/$(host)/system/system.pascal \
		stage3/$(host)/system/system.syntax
	ucsdpsys_disk --file stage3/$(host)/system.vol --crunch --list \
		--sort=name

stage1/$(host)/utility/basic.code: stage1/$(host)/codefiles/basic/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/basic/main.code \
		stage1/$(host)/utility/basic.code

stage1/$(host)/utility/binder.code: stage1/$(host)/codefiles/binder/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/binder/main.code \
		stage1/$(host)/utility/binder.code

stage1/$(host)/utility/bios.diag.code: \
		stage1/$(host)/codefiles/bios.diag/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/bios.diag/main.code \
		stage1/$(host)/utility/bios.diag.code

stage1/$(host)/utility/calc.code: stage1/$(host)/codefiles/calc/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/calc/main.code \
		stage1/$(host)/utility/calc.code

stage1/$(host)/utility/copydupdir.code: \
		stage1/$(host)/codefiles/copydupdir/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/copydupdir/main.code \
		stage1/$(host)/utility/copydupdir.code

stage1/$(host)/utility/disassembl.code: \
		stage1/$(host)/codefiles/disassembler/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/disassembler/main.code \
		stage1/$(host)/utility/disassembl.code

stage1/$(host)/utility/edittort11.code: \
		stage1/$(host)/codefiles/edittort11/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/edittort11/main.code \
		stage1/$(host)/utility/edittort11.code

stage1/$(host)/utility/execerr.code: stage1/$(host)/codefiles/execerr/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/execerr/main.code \
		stage1/$(host)/utility/execerr.code

stage1/$(host)/utility/libmap.code: stage1/$(host)/codefiles/libmap/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/libmap/main.code \
		stage1/$(host)/utility/libmap.code

stage1/$(host)/utility/librarian.code: \
		stage1/$(host)/codefiles/librarian/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/librarian/main.code \
		stage1/$(host)/utility/librarian.code

stage1/$(host)/utility/markdupdir.code: \
		stage1/$(host)/codefiles/markdupdir/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/markdupdir/main.code \
		stage1/$(host)/utility/markdupdir.code

stage1/$(host)/utility/radix.code: stage1/$(host)/codefiles/radix/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/radix/main.code \
		stage1/$(host)/utility/radix.code

stage1/$(host)/utility/rt11toedit.code: \
		stage1/$(host)/codefiles/rt11toedit/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/rt11toedit/main.code \
		stage1/$(host)/utility/rt11toedit.code

stage1/$(host)/utility/setup.code: stage1/$(host)/codefiles/setup/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/setup/main.code \
		stage1/$(host)/utility/setup.code

stage1/$(host)/utility/xref.code: stage1/$(host)/codefiles/xref/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/xref/main.code \
		stage1/$(host)/utility/xref.code

stage1/$(host)/utility/yaloe.code: stage1/$(host)/codefiles/yaloe/main.code
	@mkdir -p stage1/$(host)/utility
	cp stage1/$(host)/codefiles/yaloe/main.code \
		stage1/$(host)/utility/yaloe.code

#
# The Stage One Utility Disk image contains all of the programs that are part of
# the UCSD p-System, but not essential to boot and run the system, and not
# essential to build other programs and libraries.
#
# The Stage One Utility Disk image is *not* used when compiling the next stage
# of the build.
#

stage1/$(host)/utility.vol: stage1/$(host)/utility/basic.code \
		stage1/$(host)/utility/binder.code \
		stage1/$(host)/utility/bios.diag.code \
		stage1/$(host)/utility/calc.code \
		stage1/$(host)/utility/copydupdir.code \
		stage1/$(host)/utility/disassembl.code \
		stage1/$(host)/utility/edittort11.code \
		stage1/$(host)/utility/execerr.code \
		stage1/$(host)/utility/libmap.code \
		stage1/$(host)/utility/librarian.code \
		stage1/$(host)/utility/markdupdir.code \
		stage1/$(host)/utility/radix.code \
		stage1/$(host)/utility/rt11toedit.code \
		stage1/$(host)/utility/setup.code \
		stage1/$(host)/utility/xref.code \
		stage1/$(host)/utility/yaloe.code
	@mkdir -p stage1/$(host)
	ucsdpsys_mkfs --arch=$(arch) -B$(host_disk_kb) --label=utility \
		stage1/$(host)/utility.vol
	ucsdpsys_disk --file stage1/$(host)/utility.vol --text --put \
		stage1/$(host)/utility/basic.code \
		stage1/$(host)/utility/binder.code \
		stage1/$(host)/utility/bios.diag.code \
		stage1/$(host)/utility/calc.code \
		stage1/$(host)/utility/copydupdir.code \
		stage1/$(host)/utility/disassembl.code \
		stage1/$(host)/utility/edittort11.code \
		stage1/$(host)/utility/execerr.code \
		stage1/$(host)/utility/libmap.code \
		stage1/$(host)/utility/librarian.code \
		stage1/$(host)/utility/markdupdir.code \
		stage1/$(host)/utility/radix.code \
		stage1/$(host)/utility/rt11toedit.code \
		stage1/$(host)/utility/setup.code \
		stage1/$(host)/utility/xref.code \
		stage1/$(host)/utility/yaloe.code
	ucsdpsys_disk --file stage1/$(host)/utility.vol --crunch --list \
		--sort=name

stage2/$(host)/utility/basic.code: stage2/$(host)/codefiles/basic/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/basic/main.code \
		stage2/$(host)/utility/basic.code

stage2/$(host)/utility/binder.code: stage2/$(host)/codefiles/binder/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/binder/main.code \
		stage2/$(host)/utility/binder.code

stage2/$(host)/utility/bios.diag.code: \
		stage2/$(host)/codefiles/bios.diag/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/bios.diag/main.code \
		stage2/$(host)/utility/bios.diag.code

stage2/$(host)/utility/calc.code: stage2/$(host)/codefiles/calc/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/calc/main.code \
		stage2/$(host)/utility/calc.code

stage2/$(host)/utility/copydupdir.code: \
		stage2/$(host)/codefiles/copydupdir/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/copydupdir/main.code \
		stage2/$(host)/utility/copydupdir.code

stage2/$(host)/utility/disassembl.code: \
		stage2/$(host)/codefiles/disassembler/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/disassembler/main.code \
		stage2/$(host)/utility/disassembl.code

stage2/$(host)/utility/edittort11.code: \
		stage2/$(host)/codefiles/edittort11/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/edittort11/main.code \
		stage2/$(host)/utility/edittort11.code

stage2/$(host)/utility/execerr.code: stage2/$(host)/codefiles/execerr/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/execerr/main.code \
		stage2/$(host)/utility/execerr.code

stage2/$(host)/utility/libmap.code: stage2/$(host)/codefiles/libmap/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/libmap/main.code \
		stage2/$(host)/utility/libmap.code

stage2/$(host)/utility/librarian.code: \
		stage2/$(host)/codefiles/librarian/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/librarian/main.code \
		stage2/$(host)/utility/librarian.code

stage2/$(host)/utility/markdupdir.code: \
		stage2/$(host)/codefiles/markdupdir/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/markdupdir/main.code \
		stage2/$(host)/utility/markdupdir.code

stage2/$(host)/utility/radix.code: stage2/$(host)/codefiles/radix/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/radix/main.code \
		stage2/$(host)/utility/radix.code

stage2/$(host)/utility/rt11toedit.code: \
		stage2/$(host)/codefiles/rt11toedit/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/rt11toedit/main.code \
		stage2/$(host)/utility/rt11toedit.code

stage2/$(host)/utility/setup.code: stage2/$(host)/codefiles/setup/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/setup/main.code \
		stage2/$(host)/utility/setup.code

stage2/$(host)/utility/xref.code: stage2/$(host)/codefiles/xref/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/xref/main.code \
		stage2/$(host)/utility/xref.code

stage2/$(host)/utility/yaloe.code: stage2/$(host)/codefiles/yaloe/main.code
	@mkdir -p stage2/$(host)/utility
	cp stage2/$(host)/codefiles/yaloe/main.code \
		stage2/$(host)/utility/yaloe.code

#
# The Stage Two Utility Disk image contains all of the programs that are part of
# the UCSD p-System, but not essential to boot and run the system, and not
# essential to build other programs and libraries.
#
# The Stage Two Utility Disk image is *not* used when compiling the next stage
# of the build.
#

stage2/$(host)/utility.vol: stage2/$(host)/utility/basic.code \
		stage2/$(host)/utility/binder.code \
		stage2/$(host)/utility/bios.diag.code \
		stage2/$(host)/utility/calc.code \
		stage2/$(host)/utility/copydupdir.code \
		stage2/$(host)/utility/disassembl.code \
		stage2/$(host)/utility/edittort11.code \
		stage2/$(host)/utility/execerr.code \
		stage2/$(host)/utility/libmap.code \
		stage2/$(host)/utility/librarian.code \
		stage2/$(host)/utility/markdupdir.code \
		stage2/$(host)/utility/radix.code \
		stage2/$(host)/utility/rt11toedit.code \
		stage2/$(host)/utility/setup.code \
		stage2/$(host)/utility/xref.code \
		stage2/$(host)/utility/yaloe.code
	@mkdir -p stage2/$(host)
	ucsdpsys_mkfs --arch=$(arch) -B$(host_disk_kb) --label=utility \
		stage2/$(host)/utility.vol
	ucsdpsys_disk --file stage2/$(host)/utility.vol --text --put \
		stage2/$(host)/utility/basic.code \
		stage2/$(host)/utility/binder.code \
		stage2/$(host)/utility/bios.diag.code \
		stage2/$(host)/utility/calc.code \
		stage2/$(host)/utility/copydupdir.code \
		stage2/$(host)/utility/disassembl.code \
		stage2/$(host)/utility/edittort11.code \
		stage2/$(host)/utility/execerr.code \
		stage2/$(host)/utility/libmap.code \
		stage2/$(host)/utility/librarian.code \
		stage2/$(host)/utility/markdupdir.code \
		stage2/$(host)/utility/radix.code \
		stage2/$(host)/utility/rt11toedit.code \
		stage2/$(host)/utility/setup.code \
		stage2/$(host)/utility/xref.code \
		stage2/$(host)/utility/yaloe.code
	ucsdpsys_disk --file stage2/$(host)/utility.vol --crunch --list \
		--sort=name

stage3/$(host)/utility/basic.code: stage3/$(host)/codefiles/basic/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/basic/main.code \
		stage3/$(host)/utility/basic.code

stage3/$(host)/utility/binder.code: stage3/$(host)/codefiles/binder/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/binder/main.code \
		stage3/$(host)/utility/binder.code

stage3/$(host)/utility/bios.diag.code: \
		stage3/$(host)/codefiles/bios.diag/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/bios.diag/main.code \
		stage3/$(host)/utility/bios.diag.code

stage3/$(host)/utility/calc.code: stage3/$(host)/codefiles/calc/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/calc/main.code \
		stage3/$(host)/utility/calc.code

stage3/$(host)/utility/copydupdir.code: \
		stage3/$(host)/codefiles/copydupdir/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/copydupdir/main.code \
		stage3/$(host)/utility/copydupdir.code

stage3/$(host)/utility/disassembl.code: \
		stage3/$(host)/codefiles/disassembler/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/disassembler/main.code \
		stage3/$(host)/utility/disassembl.code

stage3/$(host)/utility/edittort11.code: \
		stage3/$(host)/codefiles/edittort11/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/edittort11/main.code \
		stage3/$(host)/utility/edittort11.code

stage3/$(host)/utility/execerr.code: stage3/$(host)/codefiles/execerr/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/execerr/main.code \
		stage3/$(host)/utility/execerr.code

stage3/$(host)/utility/libmap.code: stage3/$(host)/codefiles/libmap/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/libmap/main.code \
		stage3/$(host)/utility/libmap.code

stage3/$(host)/utility/librarian.code: \
		stage3/$(host)/codefiles/librarian/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/librarian/main.code \
		stage3/$(host)/utility/librarian.code

stage3/$(host)/utility/markdupdir.code: \
		stage3/$(host)/codefiles/markdupdir/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/markdupdir/main.code \
		stage3/$(host)/utility/markdupdir.code

stage3/$(host)/utility/radix.code: stage3/$(host)/codefiles/radix/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/radix/main.code \
		stage3/$(host)/utility/radix.code

stage3/$(host)/utility/rt11toedit.code: \
		stage3/$(host)/codefiles/rt11toedit/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/rt11toedit/main.code \
		stage3/$(host)/utility/rt11toedit.code

stage3/$(host)/utility/setup.code: stage3/$(host)/codefiles/setup/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/setup/main.code \
		stage3/$(host)/utility/setup.code

stage3/$(host)/utility/xref.code: stage3/$(host)/codefiles/xref/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/xref/main.code \
		stage3/$(host)/utility/xref.code

stage3/$(host)/utility/yaloe.code: stage3/$(host)/codefiles/yaloe/main.code
	@mkdir -p stage3/$(host)/utility
	cp stage3/$(host)/codefiles/yaloe/main.code \
		stage3/$(host)/utility/yaloe.code

#
# The Stage Three Utility Disk image contains all of the programs that are part
# of the UCSD p-System, but not essential to boot and run the system, and not
# essential to build other programs and libraries.
#

stage3/$(host)/utility.vol: stage3/$(host)/utility/basic.code \
		stage3/$(host)/utility/binder.code \
		stage3/$(host)/utility/bios.diag.code \
		stage3/$(host)/utility/calc.code \
		stage3/$(host)/utility/copydupdir.code \
		stage3/$(host)/utility/disassembl.code \
		stage3/$(host)/utility/edittort11.code \
		stage3/$(host)/utility/execerr.code \
		stage3/$(host)/utility/libmap.code \
		stage3/$(host)/utility/librarian.code \
		stage3/$(host)/utility/markdupdir.code \
		stage3/$(host)/utility/radix.code \
		stage3/$(host)/utility/rt11toedit.code \
		stage3/$(host)/utility/setup.code \
		stage3/$(host)/utility/xref.code \
		stage3/$(host)/utility/yaloe.code
	@mkdir -p stage3/$(host)
	ucsdpsys_mkfs --arch=$(arch) -B$(host_disk_kb) --label=utility \
		stage3/$(host)/utility.vol
	ucsdpsys_disk --file stage3/$(host)/utility.vol --text --put \
		stage3/$(host)/utility/basic.code \
		stage3/$(host)/utility/binder.code \
		stage3/$(host)/utility/bios.diag.code \
		stage3/$(host)/utility/calc.code \
		stage3/$(host)/utility/copydupdir.code \
		stage3/$(host)/utility/disassembl.code \
		stage3/$(host)/utility/edittort11.code \
		stage3/$(host)/utility/execerr.code \
		stage3/$(host)/utility/libmap.code \
		stage3/$(host)/utility/librarian.code \
		stage3/$(host)/utility/markdupdir.code \
		stage3/$(host)/utility/radix.code \
		stage3/$(host)/utility/rt11toedit.code \
		stage3/$(host)/utility/setup.code \
		stage3/$(host)/utility/xref.code \
		stage3/$(host)/utility/yaloe.code
	ucsdpsys_disk --file stage3/$(host)/utility.vol --crunch --list \
		--sort=name

clean:
	rm -f compiler/vstamp.inc.text filer/globals.text pascalio/globals.text
	rm -f stage1/$(host)/codefiles/arch/pdp11/assembler/main.code
	rm -f stage1/$(host)/codefiles/arch/z80/assembler/main.code
	rm -f stage1/$(host)/codefiles/assembler/z80.opcodes
	rm -f stage1/$(host)/codefiles/basic/main.code
	rm -f stage1/$(host)/codefiles/binder/main.code
	rm -f stage1/$(host)/codefiles/bios.diag/main.code
	rm -f stage1/$(host)/codefiles/calc/main.code
	rm -f stage1/$(host)/codefiles/compiler/main.code
	rm -f stage1/$(host)/codefiles/copydupdir/main.code
	rm -f stage1/$(host)/codefiles/diagnostic/main.code
	rm -f stage1/$(host)/codefiles/disassembler/main.code
	rm -f stage1/$(host)/codefiles/editor/main.code
	rm -f stage1/$(host)/codefiles/edittort11/main.code
	rm -f stage1/$(host)/codefiles/execerr/main.code
	rm -f stage1/$(host)/codefiles/filer/main.code
	rm -f stage1/$(host)/codefiles/host/klebsch/miscinfo.data
	rm -f stage1/$(host)/codefiles/interpreter/main.asm.code
	rm -f stage1/$(host)/codefiles/interpreter/main.asm.code
	rm -f stage1/$(host)/codefiles/libmap/main.code
	rm -f stage1/$(host)/codefiles/librarian/main.code
	rm -f stage1/$(host)/codefiles/linker/main.code
	rm -f stage1/$(host)/codefiles/long_integer/main.asm.code
	rm -f stage1/$(host)/codefiles/long_integer/main.code
	rm -f stage1/$(host)/codefiles/long_integer/main.pas.code
	rm -f stage1/$(host)/codefiles/markdupdir/main.code
	rm -f stage1/$(host)/codefiles/pascalio/main.code
	rm -f stage1/$(host)/codefiles/qxboot/main.asm.code
	rm -f stage1/$(host)/codefiles/radix/main.code
	rm -f stage1/$(host)/codefiles/rkboot/main.asm.code
	rm -f stage1/$(host)/codefiles/rt11toedit/main.code
	rm -f stage1/$(host)/codefiles/rxboot/main.asm.code
	rm -f stage1/$(host)/codefiles/setup/main.code
	rm -f stage1/$(host)/codefiles/system/main.code
	rm -f stage1/$(host)/codefiles/transcendental/main.asm.code
	rm -f stage1/$(host)/codefiles/transcendental/main.code
	rm -f stage1/$(host)/codefiles/transcendental/main.pas.code
	rm -f stage1/$(host)/codefiles/turtle_graphics/main.asm.code
	rm -f stage1/$(host)/codefiles/turtle_graphics/main.code
	rm -f stage1/$(host)/codefiles/turtle_graphics/main.pas.code
	rm -f stage1/$(host)/codefiles/xref/main.code
	rm -f stage1/$(host)/codefiles/yaloe/main.code
	rm -f stage1/$(host)/diagnostic.vol
	rm -f stage1/$(host)/diagnostic/system.$(host)
	rm -f stage1/$(host)/diagnostic/system.pascal stage1/$(host)/system.vol
	rm -f stage1/$(host)/system/$(arch).errors
	rm -f stage1/$(host)/system/system.$(host)
	rm -f stage1/$(host)/system/system.compiler
	rm -f stage1/$(host)/system/system.editor
	rm -f stage1/$(host)/system/system.filer
	rm -f stage1/$(host)/system/system.library
	rm -f stage1/$(host)/system/system.linker
	rm -f stage1/$(host)/system/system.miscinfo
	rm -f stage1/$(host)/system/system.pascal
	rm -f stage1/$(host)/system/system.syntax stage1/$(host)/utility.vol
	rm -f stage1/$(host)/utility/basic.code
	rm -f stage1/$(host)/utility/binder.code
	rm -f stage1/$(host)/utility/bios.diag.code
	rm -f stage1/$(host)/utility/calc.code
	rm -f stage1/$(host)/utility/copydupdir.code
	rm -f stage1/$(host)/utility/disassembl.code
	rm -f stage1/$(host)/utility/edittort11.code
	rm -f stage1/$(host)/utility/execerr.code
	rm -f stage1/$(host)/utility/libmap.code
	rm -f stage1/$(host)/utility/librarian.code
	rm -f stage1/$(host)/utility/markdupdir.code
	rm -f stage1/$(host)/utility/radix.code
	rm -f stage1/$(host)/utility/rt11toedit.code
	rm -f stage1/$(host)/utility/setup.code stage1/$(host)/utility/xref.code
	rm -f stage1/$(host)/utility/yaloe.code
	rm -f stage1/codefiles/arch/z80/assembler/z80.errors
	rm -f stage1/system/$(arch).opcodes stage1/system/system.assmbler
	rm -f stage2/$(host)/codefiles/assembler/z80.opcodes
	rm -f stage2/$(host)/codefiles/host/klebsch/miscinfo.data
	rm -f stage2/$(host)/diagnostic/system.$(host) stage2/$(host)/system.vol
	rm -f stage2/$(host)/system/$(arch).errors
	rm -f stage2/$(host)/system/system.$(host)
	rm -f stage2/$(host)/system/system.compiler
	rm -f stage2/$(host)/system/system.editor
	rm -f stage2/$(host)/system/system.filer
	rm -f stage2/$(host)/system/system.linker
	rm -f stage2/$(host)/system/system.miscinfo
	rm -f stage2/$(host)/system/system.pascal
	rm -f stage2/$(host)/system/system.syntax stage2/$(host)/utility.vol
	rm -f stage2/$(host)/utility/basic.code
	rm -f stage2/$(host)/utility/binder.code
	rm -f stage2/$(host)/utility/bios.diag.code
	rm -f stage2/$(host)/utility/calc.code
	rm -f stage2/$(host)/utility/copydupdir.code
	rm -f stage2/$(host)/utility/disassembl.code
	rm -f stage2/$(host)/utility/edittort11.code
	rm -f stage2/$(host)/utility/execerr.code
	rm -f stage2/$(host)/utility/libmap.code
	rm -f stage2/$(host)/utility/librarian.code
	rm -f stage2/$(host)/utility/markdupdir.code
	rm -f stage2/$(host)/utility/radix.code
	rm -f stage2/$(host)/utility/rt11toedit.code
	rm -f stage2/$(host)/utility/setup.code stage2/$(host)/utility/xref.code
	rm -f stage2/$(host)/utility/yaloe.code
	rm -f stage2/codefiles/arch/z80/assembler/z80.errors
	rm -f stage2/system/$(arch).opcodes stage2/system/system.assmbler
	rm -f stage3/$(host)/codefiles/assembler/z80.opcodes
	rm -f stage3/$(host)/codefiles/host/klebsch/miscinfo.data
	rm -f stage3/$(host)/diagnostic/system.$(host) stage3/$(host)/system.vol
	rm -f stage3/$(host)/system/$(arch).errors
	rm -f stage3/$(host)/system/system.$(host)
	rm -f stage3/$(host)/system/system.compiler
	rm -f stage3/$(host)/system/system.editor
	rm -f stage3/$(host)/system/system.filer
	rm -f stage3/$(host)/system/system.linker
	rm -f stage3/$(host)/system/system.miscinfo
	rm -f stage3/$(host)/system/system.pascal
	rm -f stage3/$(host)/system/system.syntax stage3/$(host)/utility.vol
	rm -f stage3/$(host)/utility/basic.code
	rm -f stage3/$(host)/utility/binder.code
	rm -f stage3/$(host)/utility/bios.diag.code
	rm -f stage3/$(host)/utility/calc.code
	rm -f stage3/$(host)/utility/copydupdir.code
	rm -f stage3/$(host)/utility/disassembl.code
	rm -f stage3/$(host)/utility/edittort11.code
	rm -f stage3/$(host)/utility/execerr.code
	rm -f stage3/$(host)/utility/libmap.code
	rm -f stage3/$(host)/utility/librarian.code
	rm -f stage3/$(host)/utility/markdupdir.code
	rm -f stage3/$(host)/utility/radix.code
	rm -f stage3/$(host)/utility/rt11toedit.code
	rm -f stage3/$(host)/utility/setup.code stage3/$(host)/utility/xref.code
	rm -f stage3/$(host)/utility/yaloe.code
	rm -f stage3/codefiles/arch/z80/assembler/z80.errors
	rm -f stage3/system/$(arch).opcodes stage3/system/system.assmbler
	rm -f system/vstamp.inc.text yaloe/globals.text

#
# Note well:  This file is generated.  This rule can be used to rebuild it.  See
# the 'filenames =' assignment, above, for more information.
#

rebuild-makefile:
	ucsdpsys_osmakgen $(filenames)

#
# We have "make install" install both the Stage One disk images and the Stage
# One disk directories into $(datadir).
#
# We install both the directories and the disk images so that the cross compiler
# can read the $(datadir)/ucsd-psystem-os/system/system.library file when cross
# compiling programs that use units, without adding code to the cross compiler
# for groping the private parts of disk images.  It also makes it a simple task
# to remix the files when users want to make custom disk images.
#

install: stage1.install $(mandir)/man1/ucsdpsys_os_license_bsd.1 \
		$(mandir)/man1/ucsdpsys_os_license_ucsd.1

stage1.install: stage1.disks
	mkdir -p $(datadir)/ucsd-psystem-os
	cp -r stage1/$(host)/diagnostic $(datadir)/ucsd-psystem-os/diagnostic
	cp stage1/$(host)/diagnostic.vol \
		$(datadir)/ucsd-psystem-os/diagnostic.vol
	cp -r stage1/$(host)/system $(datadir)/ucsd-psystem-os/system
	cp stage1/$(host)/system.vol $(datadir)/ucsd-psystem-os/system.vol
	cp -r stage1/$(host)/utility $(datadir)/ucsd-psystem-os/utility
	cp stage1/$(host)/utility.vol $(datadir)/ucsd-psystem-os/utility.vol

stage2.install: stage2.disks
	mkdir -p $(datadir)/ucsd-psystem-os
	cp -r stage2/$(host)/diagnostic $(datadir)/ucsd-psystem-os/diagnostic
	cp stage2/$(host)/diagnostic.vol \
		$(datadir)/ucsd-psystem-os/diagnostic.vol
	cp -r stage2/$(host)/system $(datadir)/ucsd-psystem-os/system
	cp stage2/$(host)/system.vol $(datadir)/ucsd-psystem-os/system.vol
	cp -r stage2/$(host)/utility $(datadir)/ucsd-psystem-os/utility
	cp stage2/$(host)/utility.vol $(datadir)/ucsd-psystem-os/utility.vol

stage3.install: stage3.disks
	mkdir -p $(datadir)/ucsd-psystem-os
	cp -r stage3/$(host)/diagnostic $(datadir)/ucsd-psystem-os/diagnostic
	cp stage3/$(host)/diagnostic.vol \
		$(datadir)/ucsd-psystem-os/diagnostic.vol
	cp -r stage3/$(host)/system $(datadir)/ucsd-psystem-os/system
	cp stage3/$(host)/system.vol $(datadir)/ucsd-psystem-os/system.vol
	cp -r stage3/$(host)/utility $(datadir)/ucsd-psystem-os/utility
	cp stage3/$(host)/utility.vol $(datadir)/ucsd-psystem-os/utility.vol

uninstall:
	rm -f $(mandir)/man1/ucsdpsys_os_license_bsd.1
	rm -f $(mandir)/man1/ucsdpsys_os_license_ucsd.1

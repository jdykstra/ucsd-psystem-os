(*
 * UCSD PASCAL - Version I.5
 * Copyright (C) 1978, 1979 Regents of the University of California
 * All Rights Reserved
 *
 * Permission to use, copy, modify and distribute any part of UCSD
 * PASCAL solely authored by UC authors before June 1, 1979 for
 * educational, research and non-profit purposes, without fee, and
 * without a written agreement is hereby granted, provided that the
 * above copyright notice, this paragraph and the following three
 * paragraphs appear in all copies.
 *
 * Those desiring to incorporate UCSD PASCAL into commercial products or
 * use for commercial purposes should contact the Technology Transfer &
 * Intellectual Property Services, University of California, San Diego,
 * 9500 Gilman Drive, Mail Code 0910, La Jolla, CA 92093-0910,
 * Ph: (858) 534-5815, Fax: (858) 534-7345, E-Mail: invent@ucsd.edu.
 *
 * IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
 * FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES,
 * INCLUDING LOST PROFITS, ARISING OUT OF THE USE OF UCSD PASCAL, EVEN IF
 * THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 *
 * THE SOFTWARE PROVIDED HEREIN IS ON AN "AS IS" BASIS, AND THE UNIVERSITY
 * OF CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT,
 * UPDATES, ENHANCEMENTS, OR MODIFICATIONS. THE UNIVERSITY OF CALIFORNIA
 * MAKES NO REPRESENTATIONS AND EXTENDS NO WARRANTIES OF ANY KIND,
 * EITHER IMPLIED OR EXPRESS, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR
 * THAT THE USE OF UCSD PASCAL WILL NOT INFRINGE ANY PATENT, TRADEMARK OR
 * OTHER RIGHTS.
 *
 * Case Number: SD1991-807 (2006)
 * http://invent.ucsd.edu/technology/cases/1995-prior/SD1991-807.shtml
 *)

(*
 * UCSD p-System Operating System
 * Copyright (C) 2010 Peter Miller
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   * Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *   * Neither the name of the ucsd-psystem-os project nor the names of its
 *     contributors may be used to endorse or promote products derived from
 *     this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *)

SEGMENT PROCEDURE ENVIRONMENT;
VAR
  I: INTEGER;

  PROCEDURE ERASE10;
  VAR I: INTEGER;
  BEGIN
    WRITE(' ':10);
    FOR I:=1 TO 10 DO WRITE(CHR(BS));
  END;

  PROCEDURE BOOL(B:BOOLEAN);
  BEGIN
    IF B THEN WRITE('True') ELSE WRITE('False');
    WRITELN
  END;

  FUNCTION GETBOOL: BOOLEAN;
  VAR CH: CHAR;
  BEGIN
    ERASE10; CH:=UCLC(GETCH);
    WHILE NOT (CH IN ['T','F']) DO
      BEGIN
        WRITE('T or F');
        FOR TRASH:=0 TO 5 DO WRITE(CHR(BS));
        CH:=UCLC(GETCH)
      END;
    IF CH='T' THEN
      BEGIN
        WRITE('True  ');
        GETBOOL:=TRUE
      END
    ELSE
      BEGIN
        WRITE('False ');
        GETBOOL:=FALSE
      END;
  END;

  FUNCTION GETINT: INTEGER;
  VAR
    CH:CHAR;
    N: INTEGER;
  BEGIN
    ERASE10;
    N:=0;
    REPEAT
      REPEAT
        CH:=GETCH;
        IF NOT (CH IN ['0'..'9',CHR(SP),CHR(CR)])
          THEN WRITE('#',CHR(BELL),CHR(BS));
      UNTIL CH IN ['0'..'9',CHR(SP),CHR(CR)];
      IF CH IN ['0'..'9'] THEN
        BEGIN
          WRITE(CH);
          IF N<1000 THEN N:=N*10+ORD(CH)-ORD('0')
        END;
    UNTIL CH IN [CHR(SP),CHR(CR)];
    GETINT:=N; WRITE('  ')
  END;

  procedure blurb;
  begin
    with pagezero do
    begin
      (* Created this procedure because the Apple compiler was
       * complaining that the ENVIRONMENT procedure was too long. *)
      WRITELN;
      WRITE(       '    A(uto indent  '); BOOL(AUTOINDENT);
      WRITE(       '    F(illing      '); BOOL(FILLING);
      WRITE(       '    L(eft margin  '); WRITELN(LMARGIN);
      WRITE(       '    R(ight margin '); WRITELN(RMARGIN);
      WRITE(       '    P(ara margin  '); WRITELN(PARAMARGIN);
      WRITE(       '    C(ommand ch   '); WRITELN(RUNOFFCH);
      WRITE(       '    T(oken def    '); BOOL(TOKDEF);
      WRITELN;
      WRITELN('    ',BUFCOUNT,' bytes used, ',BUFSIZE-BUFCOUNT+1,' available.');
      WRITELN;
    end;
  end;

BEGIN
  WITH PAGEZERO DO
    BEGIN
      CLEARSCREEN;
      PROMPTLINE:= ' Environment: {options} <etx> or <sp> to leave';
      PROMPT; NEEDPROMPT:=TRUE;
      blurb;
      IF SDEFINED OR TDEFINED THEN
        BEGIN
          WRITELN('    Patterns:');
          IF TDEFINED THEN WRITE('      <target>= ''',TARGET:TLENGTH,'''');
          IF SDEFINED THEN WRITE(', <subst>=  ''',SUBSTRING:SLENGTH,'''');
          WRITELN; WRITELN;
        END;
      IF COUNT>0 THEN WRITELN('    Markers:');
      WRITE('  ');
      FOR I:=0 TO COUNT-1 DO
        BEGIN WRITE(' ':6,NAME[I]);
          IF (I+4) MOD 3=0 THEN BEGIN WRITELN; WRITE('  ') END
        END;
      WRITELN;
      WRITELN;
      WRITELN('    Date Created: ',CREATED.MONTH,'-',CREATED.DAY,'-',
                                  CREATED.YEAR,'   Last Used: ',
                                  LASTUSED.MONTH,'-',LASTUSED.DAY,'-',
                                  LASTUSED.YEAR);
      GOTOXY(LENGTH(PROMPTLINE),0);
      REPEAT
        CH:=UCLC(GETCH);
        IF NOT (CH IN ['A','C','F','L','P','R','T',' ',CHR(ETX),CHR(CR)]) THEN
          BEGIN ERROR('Not option',NONFATAL); PROMPT; END
        ELSE
          CASE CH OF
           'A': BEGIN GOTOXY(18,1); AUTOINDENT:=GETBOOL END;
           'F': BEGIN GOTOXY(18,2); FILLING:=GETBOOL END;
           'L': BEGIN GOTOXY(18,3); LMARGIN:=GETINT END;
           'R': BEGIN GOTOXY(18,4); RMARGIN:=GETINT END;
           'P': BEGIN GOTOXY(18,5); PARAMARGIN:=GETINT END;
           'C': BEGIN GOTOXY(18,6); READ(RUNOFFCH) END;
           'T': BEGIN GOTOXY(18,7); TOKDEF:=GETBOOL END
          END;
        GOTOXY(LENGTH(PROMPTLINE),0);
      UNTIL CH IN [' ',CHR(ETX),CHR(CR)];
      REDISPLAY;
    END;
END;

(*
 * UCSD PASCAL - Version I.5
 * Copyright (C) 1978, 1979 Regents of the University of California
 * All Rights Reserved
 *
 * Permission to use, copy, modify and distribute any part of UCSD
 * PASCAL solely authored by UC authors before June 1, 1979 for
 * educational, research and non-profit purposes, without fee, and
 * without a written agreement is hereby granted, provided that the
 * above copyright notice, this paragraph and the following three
 * paragraphs appear in all copies.
 *
 * Those desiring to incorporate UCSD PASCAL into commercial products or
 * use for commercial purposes should contact the Technology Transfer &
 * Intellectual Property Services, University of California, San Diego,
 * 9500 Gilman Drive, Mail Code 0910, La Jolla, CA 92093-0910,
 * Ph: (858) 534-5815, Fax: (858) 534-7345, E-Mail: invent@ucsd.edu.
 *
 * IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
 * FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES,
 * INCLUDING LOST PROFITS, ARISING OUT OF THE USE OF UCSD PASCAL, EVEN IF
 * THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 *
 * THE SOFTWARE PROVIDED HEREIN IS ON AN "AS IS" BASIS, AND THE UNIVERSITY
 * OF CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT,
 * UPDATES, ENHANCEMENTS, OR MODIFICATIONS. THE UNIVERSITY OF CALIFORNIA
 * MAKES NO REPRESENTATIONS AND EXTENDS NO WARRANTIES OF ANY KIND,
 * EITHER IMPLIED OR EXPRESS, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR
 * THAT THE USE OF UCSD PASCAL WILL NOT INFRINGE ANY PATENT, TRADEMARK OR
 * OTHER RIGHTS.
 *
 * Case Number: SD1991-807 (2006)
 * http://invent.ucsd.edu/technology/cases/1995-prior/SD1991-807.shtml
 *)

 {$U-}
 {$R-}
 {===============================================================}
 {                                                               }
 {               UCSD   ADAPTABLE   ASSEMBLER                    }
 {               ----   ---------   ---------                    }
 {       Patterned after The Waterloo Last Assembler (TLA)       }
 {       Core Authors:  William P. Franks and Dennis Volper      }
 {                                                               }
 {                                                               }
 {               Version :       pdp 11 & LSI 11                 }
 {               Date    :       Sept.  27, 1978                 }
 {               Author  :       Dennis Volper                   }
 {               Release :       I.5.b.1                         }
 {                                                               }
 {                                                               }
 {              Institute for Information Systems                }
 {                UC  San Diego, La Jolla,  CA                   }
 {                                                               }
 {                 Kenneth L. Bowles, Director                   }
 {                                                               }
 {                     Copyright (C) 1978,                       }
 {       Regents of the University of California, San Diego      }
 {                                                               }
 {===============================================================}
 PROGRAM SYSTEMLEVEL;
 TYPE    PHYLE=FILE;
 VAR     FILLER:ARRAY[0..6] OF INTEGER;
         USERINFO:RECORD
                 WORKSRC,WORKCODE:^PHYLE;
                 ERRSYM,ERRBLK,ERRNUM:INTEGER;
                 SLOWTERM,STUPID:BOOLEAN;
                 ALTMODE:CHAR;
                 FILLER2:ARRAY[0..21] OF INTEGER; {change with care...allows}
                 WORKTITLE,SYMTITLE:STRING[15]     {more compile time space}
             END;

 SEGMENT PROCEDURE TLA(III,JJJ:INTEGER);
 CONST  RELEASEVERSION =TRUE;  {Is this for the outside world?}
        NUMKWORDS      =27;    {The number of key words in this assembler}
        HASHRANGE      =128;   {The hash table size}
        HASHTOP        =127;   {One less than HASHRANGE}
        MACROSIZE      =19;    {The buffer size for a MACRO stored on heap}
        BUFBLKS        =2;     {# of blocks for output buffer}
        BUFLIMIT       =1023;  {(BUFBLKS*512) - 1}
        MAXPROC        =10;    {Maximum number of Procedures per Assembly}
        PAGESIZE       =55;    {Lines printed per page}
        VIEWSTACK      =TRUE;  {Display stack & heap while Assembling}
        DEBUG          =FALSE; {for debugging Assembler}
        CODESIZE       =20;    {Testing values}
        RELEASENAME    ='I.5 [b.1]';

 {Below constants are Assembler dependent}

        NOP            =160;   {A one byte NOP}
        ASMNAME        ='11';
        BYTEFIT        =5;     {maximum bytes per output line}
        WORDFIT        =3;     {maximum words per output line}
        HIBYTEFIRST    =FALSE; {First byte is the high-order byte?}
        LISTHIFIRST    =TRUE;
        LCCHAR         ='*';   {Location counter character}
        WORDADDRESSED  =FALSE; {Word as opposed to byte addressed}
        AFTERPLUS      =0;     {An impossible character}
        AFTERMINUS     ='(';   { "-(" is always auto decrement}
        DEFRADIX       =8;     {Default radix}
        LISTRADIX      =8;     {Printed listing radix}
        HEXSWITCH      ='H';   {Char following number which resets radix}
        DECSWITCH      ='.';
        OCTSWITCH      =0;
        BINSWITCH      ='B';
        RELHI          =FALSE; {Relative byte most significant passed PUTWORD}

 TYPE BITE=0..255;
      PACKNAME=PACKED ARRAY[0..7] OF CHAR;
      WORDSWAP=PACKED RECORD CASE INTEGER OF
               0:(HWORD:INTEGER);
               1:(HIBYTE,LOWBYTE:BITE);
               2:(HEX1,HEX2,HEX3,HEX4:0..15);
               3:(OCT2,OCT3,OCT4,OCT5,OCT6:0..7;
                                      OCT1:0..1);
               4:(BIN:PACKED ARRAY[0..15] OF 0..1);
           END;
      HASHTYPE=RECORD CASE BOOLEAN OF
               TRUE:(INT:INTEGER);
              FALSE:(BOL:BOOLEAN)
           END;
      BYTESWAP=PACKED RECORD CASE INTEGER OF
               0:(BWORD:INTEGER);
               1:(BADBYTE,GOODBYTE:BITE);
               2:(REGLOW:0..7;
                  MODELOW:0..7;
                  REGHI:0..7;
                  MODEHI:0..7;
                  DUM2:0..15);
               3:(XOFFSET:0..255;
                  DUM3:0..255);
               4:(SOBSET:0..63;
                  DUM4:0..1023)
           END;

(*$I asm1.text*)
(*$I asm2.text*)
(*$I asm3.text*)
(*$I asm4.text*)
(*$I asm5.text*)
(*$I asm6.text*)

 BEGIN {Main Assembler}
   INITIALIZE;
   REPEAT
     ASSEMBLE;
     IF (PROCNUM>0) AND LISTING THEN SYMTBLDUMP;
     PROCEND;
   UNTIL LEXTOKEN=TEND;
 END;


 BEGIN  {dummy outer block}  END.

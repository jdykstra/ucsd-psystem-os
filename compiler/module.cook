/*
 * UCSD p-System Operating System
 * Copyright (C) 2010, 2011 Peter Miller
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   * Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *   * Neither the name of the ucsd-psystem-os project nor the names of its
 *     contributors may be used to endorse or promote products derived from
 *     this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

pascal-depends-files =
    [addsuffix ".d" [match_mask %/main.text [source_files]]]
    ;
#if [count [pascal-depends-files]]
#include-cooked [pascal-depends-files]
#endif

%1/%.text.d: %1/%.text
    set no-cascade
{
    ucsdpsys_depends
        -I%1
        [addprefix "-J" [search_list]]
        -r
        -o[target]
        -P "'cascade %1/%.text = '"
        -S " ';'"
        [resolve %1/%.text]
        ;
}

pascal-text-files = [match_mask %1/main.text [source_files]];
pascal-text-files = [stringset [pascal-text-files]
        -
            pascalio/main.text
            yaloe/main.text
        ];
pascal-code-files = [fromto %0%.text %0%.code [pascal-text-files]];

/* all += [pascal-code-files]; */

#if 0

%1/main.code: %1/main.text: %1/vstamp.inc.text
    etc/ucsdpsys-wrapper.sh
{
    /* create a volume to work within. */
    ucsdpsys_mkfs -B800 -LWORK temp.vol;

    /* put all of the files needed to compile into the work volume. */
    ucsdpsys_disk -f temp.vol -p [resolve [match_mask %%0%%.text [need]]];

    /*
     * That data section is
     * f         for F(iler
     * p         for P(refix -- like "cd" on Unix
     * work:     the volume
     * q         exit from the filer
     * c         for C(ompile
     * main\n    for the text file
     * main\n    for the code file
     * h         for halt
     */
    sh etc/ucsdpsys-wrapper.sh -b- -w temp.vol
        /* FIXME: we will need the stage, too. */
        [prepost "-S " "/datadir" [search_list]]
        set meter;
data
fpwork:
qcmain
main
hhhhhhh
dataend

    ucsdpsys_disk -f temp.vol -g [target]\=main.code;
    rm temp.vol;
}

#endif

/* all += datadir/system.compiler datadir/system.syntax ; */

datadir/system.compiler: compiler/main.code
    set shallow
{
    cp [resolve [need]] [target];
}

datadir/system.syntax: compiler/error-messages.text
{
    ucsdpsys_text -t -e < [resolve [need]] > [target];
}

%/vstamp.inc.text: etc/vstamp.inc.text
{
    cp [resolve etc/vstamp.inc.text] %/vstamp.inc.text;
}

(*
 * UCSD PASCAL - Version I.5
 * Copyright (C) 1978, 1979 Regents of the University of California
 * All Rights Reserved
 *
 * Permission to use, copy, modify and distribute any part of UCSD
 * PASCAL solely authored by UC authors before June 1, 1979 for
 * educational, research and non-profit purposes, without fee, and
 * without a written agreement is hereby granted, provided that the
 * above copyright notice, this paragraph and the following three
 * paragraphs appear in all copies.
 *
 * Those desiring to incorporate UCSD PASCAL into commercial products or
 * use for commercial purposes should contact the Technology Transfer &
 * Intellectual Property Services, University of California, San Diego,
 * 9500 Gilman Drive, Mail Code 0910, La Jolla, CA 92093-0910,
 * Ph: (858) 534-5815, Fax: (858) 534-7345, E-Mail: invent@ucsd.edu.
 *
 * IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
 * FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES,
 * INCLUDING LOST PROFITS, ARISING OUT OF THE USE OF UCSD PASCAL, EVEN IF
 * THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 *
 * THE SOFTWARE PROVIDED HEREIN IS ON AN "AS IS" BASIS, AND THE UNIVERSITY
 * OF CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT,
 * UPDATES, ENHANCEMENTS, OR MODIFICATIONS. THE UNIVERSITY OF CALIFORNIA
 * MAKES NO REPRESENTATIONS AND EXTENDS NO WARRANTIES OF ANY KIND,
 * EITHER IMPLIED OR EXPRESS, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, OR
 * THAT THE USE OF UCSD PASCAL WILL NOT INFRINGE ANY PATENT, TRADEMARK OR
 * OTHER RIGHTS.
 *
 * Case Number: SD1991-807 (2006)
 * http://invent.ucsd.edu/technology/cases/1995-prior/SD1991-807.shtml
 *)

  {This is an unpublished work copyright by the Regents of
   the University of California. This item is the property of SofTech
   Microsystems Inc., and it may be used, copied or distributed only
   as permitted in a written license from that company.}



(************************************************************************)




SEGMENT PROCEDURE CXP(PARAM1,PARAM2:INTEGER);

  SEGMENT FUNCTION RETURN1000:INTEGER;
  VAR VARIABLE:INTEGER;
  BEGIN
    VARIABLE:=76;
    RETURN1000:=1000;
  END;

  (*SPACEEATER tests that a segment is only loaded the first time it is
    called. SPACEEATER calls itself recursively 64 times which should be
    more than enough to swallow up all of memory and stack overflow if it
    is reloaded every time called*)
  SEGMENT PROCEDURE SPACEEATER(HOWFAR:INTEGER);

    PROCEDURE EAT0;
    VAR S:STRING;
    BEGIN
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
    END;

    PROCEDURE EAT1;
    VAR S:STRING;
    BEGIN
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
      S:='                                                            ';
    END;

  BEGIN
    IF HOWFAR<64 THEN
      SPACEEATER(HOWFAR+1);
  END;

BEGIN
  CHK(INIT);

  CHK(TRUE);   (*end of CXP call test*)

  DESCRIPTION('CXP  chking paramters are passed correctly');
  CHK((PARAM1=6502) AND (PARAM2=2001));

  DESCRIPTION('CXP  function');
  CHK(RETURN1000=1000);

  DESCRIPTION('CXP  chking that segment is not reloaded if already on stack');
  SPACEEATER(0);
  CHK(TRUE);

END;




(************************************************************************)




PROCEDURE VARIOUSCSPS;
VAR I,J:INTEGER;
    F:FILE;
BEGIN
  CHK(INIT);

  DESCRIPTION('TIM  stack check only');
  TIME(I,J);
  CHK(TRUE);

  DESCRIPTION('IOR  stack check only');
  I:=IORESULT;
  CHK(TRUE);

  DESCRIPTION('IOC');
  (*$I+*)
  CLOSE(F);
  (*$I-*)
  CHK(TRUE);

END;

(************************************************************************)
